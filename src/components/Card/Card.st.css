:import {
    -st-from: "../../../src/tpaStyles/styleableExt";
    -st-named: wixApply;
}

:import {
    -st-from: "./mixins.st.css";
    -st-named: withBorder, withDynamicPadding;
}

:vars {
    /*Constance*/
    DefaultInfoCardBG: color-1;
    DefaultMediaCardBG: color-5;
    DefaultBorderColor: color-5;
    DefaultBorderWidth: 1;
}

:vars {
    /*Overrides*/
    MainBorderWidth: --overridable;
    MainBorderColor: --overridable;
    MainInfoColor: --overridable;
    MainMediaColor: --overridable;
}

:vars {
    borderWidth: wixApply(unit, wixApply(fallback, wixApply(zeroAsTrue, value(MainBorderWidth)), value(DefaultBorderWidth)), px);
    borderColor: wixApply(color, wixApply(fallback, value(MainBorderColor), value(DefaultBorderColor)));
    infoBGColor: wixApply(color, wixApply(fallback, value(MainInfoColor), value(DefaultInfoCardBG)));
    mediaBGColor: wixApply(color, wixApply(fallback, value(MainMediaColor), wixApply(opacity, wixApply(color, value(DefaultMediaCardBG)), 0.2)));
}

:vars {
    infoPadding: 60px;
    negativeInfoPadding: -60px;
}

.root {
    -st-states: ratio(enum(100, 50, 40, 30)), flippedRatio, invertInfoPosition, stacked, mediaAspectRatio;
    display: flex;
    box-sizing: border-box;
    width: 100%;
    -st-mixin: withBorder(
            BorderColor value(borderColor),
            BorderWidth value(borderWidth)
    );
}

.root:stacked {
    flex-direction: column;
}

.root:invertInfoPosition {
    flex-direction: row-reverse;
}

.root:stacked:invertInfoPosition {
    flex-direction: column-reverse;
    justify-content: space-between;
}

.root:stacked > .infoContainer,
.root:stacked > .mediaWrapper {
    flex-grow: 0;
    flex-basis: auto;
}

.root:ratio(100) > .infoContainer {
    flex: 100%;
}

.root:ratio(50) > .mediaWrapper,
.root:ratio(50) > .infoContainer {
    flex: 50%;
}

.root:ratio(40):flippedRatio:invertInfoPosition > .mediaWrapper,
.root:ratio(40):invertInfoPosition > .infoContainer,
.root:ratio(40):flippedRatio > .infoContainer,
.root:ratio(40) > .mediaWrapper {
    flex: 40%;
}

.root:ratio(40):flippedRatio:invertInfoPosition > .infoContainer,
.root:ratio(40):invertInfoPosition > .mediaWrapper,
.root:ratio(40):flippedRatio > .mediaWrapper,
.root:ratio(40) > .infoContainer {
    flex: 60%;
}

.root:ratio(30):flippedRatio:invertInfoPosition > .mediaWrapper,
.root:ratio(30):invertInfoPosition > .infoContainer,
.root:ratio(30):flippedRatio > .infoContainer,
.root:ratio(30) > .mediaWrapper {
    flex: 30%;
}

.root:ratio(30):flippedRatio:invertInfoPosition > .infoContainer,
.root:ratio(30):invertInfoPosition > .mediaWrapper,
.root:ratio(30):flippedRatio > .mediaWrapper,
.root:ratio(30) > .infoContainer {
    flex: 70%;
}

.root:mediaAspectRatio > .mediaWrapper {
    position: relative;
}

.root:mediaAspectRatio > .mediaWrapper > .mediaContainer {
    position: absolute;
    top: 0;
    width: 100%;
}

.root .mediaContainer {
    background-color: value(mediaBGColor);
    height: 100%;
}

.root > .infoContainer {
    box-sizing: border-box;
    background-color: value(infoBGColor);
    -st-mixin: withDynamicPadding(
            PaddingSize value(infoPadding),
            BorderWidth value(borderWidth)
    );
}
