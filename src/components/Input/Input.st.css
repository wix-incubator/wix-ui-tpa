:import {
    -st-from: "../../../src/tpaStyles/styleableExt";
    -st-named: wixApply;
}

:import {
    -st-from: "wix-ui-core/dist/src/components/Input/Input.st.css";
    -st-default: BaseInput;
}

:import {
    -st-from: "../../baseComponents/ErrorLine/ErrorLine.st.css";
    -st-default: ErrorLine;
}

:import {
    -st-from: "../../palette.st.css";
    -st-named: errorColor, emptyErrorColor;
}

:vars {
    MainBorderColor: wixApply(color, color-5);
    MainBackgroundColor: transparent;
    MainTextColor: wixApply(color, color-5);
}

:vars {
    color: value(MainTextColor);
    colorDisabled: wixApply(opacity, value(MainTextColor), 0.3);
    colorHover: value(MainTextColor);
    colorFocus: value(MainTextColor);
    colorPlaceholder: wixApply(opacity, value(MainTextColor), 0.3);
    backgroundColor: value(MainBackgroundColor);
    backgroundColorDisabled: wixApply(opacity, value(MainBackgroundColor), 0.3);
    backgroundColorHover: value(MainBackgroundColor);
    backgroundColorFocus: value(MainBackgroundColor);
    borderColor: wixApply(opacity, value(MainBorderColor), 0.2);
    borderColorDisabled: wixApply(opacity, value(MainBorderColor), 0.2);
    borderColorHover: wixApply(opacity, value(MainBorderColor), 0.2);
    borderColorFocus: value(MainBorderColor);
    hoverBorderColor: value(MainBorderColor);
    border: 1px solid wixApply(opacity, value(MainBorderColor), 0.2);
    font: wixApply(font, "Body-M")
}

.root {
    -st-states: empty;
    -st-extends: BaseInput;

    /* todo - Define fonts somewhere*/
    font: value(font);
}

/* Placeholder color */
.root::nativeInput::-webkit-input-placeholder,
.root::nativeInput::-moz-placeholder,
.root::nativeInput:-moz-placeholder,
.root::nativeInput:-ms-input-placeholder {
    color: value(colorPlaceholder);
}

.root::nativeInput {
    font-size: 16px;
    line-height: 24px;
    height: 36px;
    padding: 0 13px;
    border-radius: 0;
    transition: border-color .1s ease-in;
    color: value(color);
    background-color: value(backgroundColor);
    border-color: value(borderColor);
    border: value(border);
    box-sizing: border-box;
}

.root:hover::nativeInput {
    color: value(colorHover);
    background-color: value(backgroundColorHover);
    border-color: value(borderColorHover);
}

.root:disabled::nativeInput {
    color: value(colorDisabled);
    background-color: value(backgroundColorDisabled);
    border-color: value(borderColorDisabled);
}

.root:focus::nativeInput {
    outline: 0;
    color: value(colorFocus);
    background-color: value(backgroundColorFocus);
    border-color: value(borderColorFocus);
}

.root:error::nativeInput {
    border-color: value(errorColor);
}

.root:error:empty::nativeInput {
    border-color: value(emptyErrorColor);
}

.root::nativeInput::selection {
    /*TODO - should get the value from the editor*/
    background: rgba(33, 33, 33, 0.1);
}

.errorMessage {
    display: none;
}

.root:error .errorMessage {
    display: block;
}
