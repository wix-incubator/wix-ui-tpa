:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback, font, applyOpacity;
}

:import {
    -st-from: "../Text/Text.st.css";
    -st-default: TPAText;
}

/*Defaults*/
:vars {
    DefaultAlignment: left;
    DefaultBorderWidth: 1px;
    DefaultBorderOpacity: 1;
    DefaultFontColor: color-5;
    DefaultBackgroundColor: color-1;
    DefaultBorderColor: color-2;
    DefaultTodayColor: color-8;
    DefaultFontSize: 16px;
    DefaultFontStyle: "{theme: 'Body-M', size:'16px' lineHeight: '1em'}";
}

/*Overrides*/
:vars {
    Alignment: --overridable
    BorderWidth: --overridable
    BorderOpacity: --overridable
    FontColor: --overridable
    BackgroundColor: --overridable
    BorderColor: --overridable
    TodayColor: --overridable
    FontStyle: --overridable
    FontSize: --overridable
}

:vars {
    CurrentAlignment: fallback(value(Alignment), value(DefaultAlignment));
    CurrentBorderWidth: fallback(value(BorderWidth), value(DefaultBorderWidth));
    CurrentBorderOpacity: fallback(value(BorderOpacity), value(DefaultBorderOpacity))
    CurrentFontColor: color(fallback(value(FontColor), value(DefaultFontColor)));
    CurrentBackgroundColor: color(fallback(value(BackgroundColor), value(DefaultBackgroundColor)));
    CurrentBorderColor: color(fallback(value(BorderColor), value(DefaultBorderColor)));
    CurrentTodayColor: color(fallback(value(TodayColor), value(DefaultTodayColor)));
    CurrentFontStyle: fallback(value(FontStyle), font(value(DefaultFontStyle)));
    CurrentFontSize: fallback(value(FontSize), value(DefaultFontSize));
}

.innerContainer {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    padding: 12px;
}

.root {
    -st-states: stretchable, boldTitle, boldBackground, current;
    background: applyOpacity(color(color-2), 0.1);
    text-align: value(CurrentAlignment);
    width: 100%;
    padding-top: 100%; /* 1:1 Aspect Ratio */
    position: relative;
    border: value(CurrentBorderWidth) solid applyOpacity(value(CurrentBorderColor), value(CurrentBorderOpacity));
}

.title {
    -st-extends: TPAText;
    -st-mixin: TPAText(
        MainTextColor color(color-4),
        MainTextFont value(CurrentFontStyle)
    );
    font-size: value(CurrentFontSize);
    line-height: 1em;
}

.root:boldTitle .title {
    -st-mixin: TPAText(
        MainTextColor value(CurrentFontColor),
        MainTextFont value(CurrentFontStyle)
    );
}

.root:boldBackground {
    background-color: applyOpacity(value(CurrentBackgroundColor), 1);
}

/* Current Day */

.root:current {
    border: value(CurrentBorderWidth) solid applyOpacity(value(CurrentTodayColor), value(CurrentBorderOpacity));
    background-color: value(CurrentBackgroundColor);
}

.root:current .title {
    -st-mixin: TPAText(
        MainTextColor value(CurrentTodayColor),
        MainTextFont value(CurrentFontStyle)
    );
}

/* isStrechAble == true */
.root:stretchable {
    padding-top: 0;
    height: 100%;
}