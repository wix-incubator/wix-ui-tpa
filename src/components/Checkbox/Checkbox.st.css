:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback, font, applyOpacity;
}

:import {
  -st-from: "wix-ui-core/index.st.css";
  -st-named: Checkbox;
}

:import {
    -st-from: "../../common/palette.st.css";
    -st-named: errorColor;
}

:vars {
    /*Defaults*/
    DefaultTextColor: color-5;
    DefaultBorderColor: color-5;
    DefaultIconColor: color-8;
    DisabledColor: color-3;
    Font: font("{theme: 'Body-M', size: '16px', lineHeight: '24px'}");
}

:vars {
    /*Overrides*/
    TextColor: --overridable;
    BorderColor: --overridable;
    IconColor: color-8;
    BoxColor: color-1;
}

:vars {
    CurrentBorderColor: color(fallback(value(BorderColor), value(DefaultBorderColor)));
    CurrentIconColor: color(fallback(value(IconColor), value(DefaultIconColor)));
    CurrentTextColor: color(fallback(value(TextColor), value(DefaultTextColor)));
}

.box {
    display: flex;
    padding: 16px;
    background-color: color(color-1);
    border: 1px solid applyOpacity(value(CurrentBorderColor), 0.6);
    margin-bottom: 16px;
    cursor: pointer;
    width: 100%;
    box-sizing: border-box;
}

.root {
    -st-extends: Checkbox;
    -st-states: checked, disabled, error;

    display: inline-flex;
    align-items: flex-start;
    box-sizing: border-box;

    font: value(Font);
    flex: 1;
}

.root * {
    box-sizing: inherit;
}

.root::childContainer {
    display: flex;
    flex: 1;
}

.root::box {
    line-height: 20px;
}

.icon {
    display: inline-block;
    width: 16px;
    height: 16px;

    border: 1px solid;
    border-color: applyOpacity(value(CurrentBorderColor), 0.6);
    border-radius: 1px;

    font-size: 13px;
    line-height: 1.2;
    vertical-align: middle;
}

.icon svg {
    margin: 1px 3px;

    width: 8px;
    height: 7px;
}

.divider {
    display: inline-block;
    width: 12px;

    flex-shrink: 0;
}

.icon path {
    fill: value(CurrentIconColor);
}

.label {
    display: inline-block;
    color: value(CurrentTextColor);
}

.price {
    margin-left: 5px;
}

.box .price {
    margin-left: auto;
}

/* STATES */
.box.disabled {
    cursor: default;
}

.box:hover, .box:focus-within {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.box.disabled:hover:not(.checked), .box.disabled:focus-within:not(.checked) {
    border-color: applyOpacity(value(CurrentBorderColor), 0.6);
}

.box.checked {
    background-color: applyOpacity(value(CurrentIconColor), 0.1);
    border-color: value(CurrentIconColor);
}

.box.checked:not(.disabled):hover, .box.checked:not(.disabled):focus-within {
    border-color: applyOpacity(value(CurrentIconColor), 0.6);
}

.box:not(.disabled):hover .icon {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.box:last-of-type {
    margin-bottom: 0;
}

.root:hover .icon {
    border-color: applyOpacity(value(CurrentBorderColor), 1);
}

.root:error:not(:hover) .icon {
    border-color: color(value(errorColor));
}

.root:disabled {
    cursor: default;
    pointer-events: none;
}

.root:disabled .icon {
    border-color: color(value(DisabledColor));
}

.root:disabled .label {
    color: color(value(DisabledColor));
}

.root:disabled .icon path {
    fill: color(value(DisabledColor));
}
