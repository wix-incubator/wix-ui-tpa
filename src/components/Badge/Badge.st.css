:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, applyOpacity, fallback;
}

:vars {
    /*Defaults*/
    DefaultBgColor: color-5;
    DefaultTextColor: color-5;
    LightBgColor: color-1;
    LightTextColor: color-5;
    LightBorderColor: color-5;
    PrimaryBgColor: color-8;
    PrimaryTextColor: color-1;
}

:vars {
    /*Overrides*/
    BadgeBgColor: --overridable;
    BadgeTextColor: --overridable;
}

:vars {
    badgeBgColor: color(fallback(value(BadgeBgColor), applyOpacity(color(value(DefaultBgColor)), 0.1)));
    badgeTextColor: color(fallback(value(BadgeTextColor), value(DefaultTextColor)));
    lightBorderColor: applyOpacity(color(value(LightBorderColor)), 0.10);
}

.root {
    -st-states: priority(enum(default, light, primary)), withIcon;
    display: inline-flex;
    border-radius: 12px;
    line-height: 20px;
    font-size: 12px;
}

.root::before, .root::after {
    content: '';
    width: 12px;;
}

.innerContainer {
    display: flex;
    align-items: center;
}

.icon {
    height: 16px;
    width: 18px;
    display: flex;
}

.icon > svg {
    width: 16px;
    height: 16px;
}

.icon::after {
    content: '';
    width: 2px;
}

.root:priority(default) {
    background-color: value(badgeBgColor);
    color: value(badgeTextColor);
    border: none;
}

.root:priority(default) .icon path {
    fill: color(value(badgeTextColor));
}

.root:priority(light) {
    background-color: color(value(LightBgColor));
    color: color(value(LightTextColor));
    border-color: value(lightBorderColor);
    box-sizing: border-box;
    border-width: 1px;
    border-style: solid;
    line-height: 18px;
}

.root:priority(light) .icon path {
    fill: color(value(LightTextColor));
}

.root:priority(primary) {
    background-color: color(value(PrimaryBgColor));
    color: color(value(PrimaryTextColor));
    border: none;
}

.root:priority(primary) .icon path {
    fill: color(value(PrimaryTextColor));
}

.root:withIcon::before {
    width: 10px;
}
