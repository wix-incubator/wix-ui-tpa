:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback, applyOpacity;
}

:import {
  -st-from: "./BadgeVariables.st.css";
  -st-named: badgeBgColor, badgeTextColor, primaryBgColor, lightBgColor, primaryTextColor, lightTextColor, lightBorderColor;
}

.root {
    -st-states: priority(enum(default, light, primary)), withIcon;
    display: inline-flex;
    border-radius: 12px;
    line-height: 20px;
    font-size: 12px;
}

.root::before, .root::after {
    content: '';
    width: 12px;;
}

.innerContainer {
    display: flex;
    align-items: center;
}

.icon {
    height: 16px;
    width: 18px;
    display: flex;
}

.icon > svg {
    width: 16px;
    height: 16px;
}

.icon::after {
    content: '';
    width: 2px;
}

.root:priority(default) {
    background-color: value(badgeBgColor);
    color: value(badgeTextColor);
    border: none;
}

.root:priority(default) .icon path {
    fill: value(badgeTextColor);
}

.root:priority(light) {
    background-color: value(lightBgColor);
    color: value(lightTextColor);
    border-color: value(lightBorderColor);
    box-sizing: border-box;
    border-width: 1px;
    border-style: solid;
    line-height: 18px;
}

.root:priority(light) .icon path {
    fill: value(lightTextColor);
}

.root:priority(primary) {
    background-color: value(primaryBgColor);
    color: value(primaryTextColor);
    border: none;
}

.root:priority(primary) .icon path {
    fill: value(primaryTextColor);
}

.root:withIcon::before {
    width: 10px;
}

/* 
* The ".overrides" class is not an internal parts of the component,
* but rather to be an easy way to import and mix the overridable parts of the component.
*/
.overrides {
  -st-extends: root;
}

.overrides:priority(default) {
    background-color: value(badgeBgColor);
    color: value(badgeTextColor);
}

.overrides:priority(default) {
    background-color: value(badgeBgColor);
    color: value(badgeTextColor);
}

.overrides:priority(default) .icon path {
    fill: value(badgeTextColor);
}