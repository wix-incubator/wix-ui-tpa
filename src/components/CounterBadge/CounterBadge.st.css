:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, applyOpacity, fallback;
}

/*Overrides*/
:vars {
    fixedFont45: HelveticaNeueW01-45Ligh, HelveticaNeueW02-45Ligh, HelveticaNeueW10-45Ligh, Helvetica Neue, Helvetica, Arial, メイリオ, meiryo, ヒラギノ角ゴ pro w3, hiragino kaku gothic pro, sans-serif;
}

:vars {
    /*
        Background color
        @default primaryBgColor: color-8, secondaryBgColor: color-8 with opacity 0.1
    */
    CounterBadgeBgColor: --overridable;
    /*
        Text color
        @default primaryTextColor: color-1, secondaryTextColor: color-8
    */
    CounterBadgeTextColor: --overridable;
}

:vars {
    secondaryBgColor: color(fallback(value(CounterBadgeBgColor), applyOpacity(color(color-8),0.1)));
    secondaryTextColor: color(fallback(value(CounterBadgeTextColor), color(color-8)));
}

:vars {
    primaryBgColor: color(fallback(value(CounterBadgeBgColor), color(color-8)));
    primaryTextColor: color(fallback(value(CounterBadgeTextColor), color(color-1)));
}

.root {
    font-family: value(fixedFont45);
    display: inline-flex;
    line-height: 20px;
    font-size: 12px;
    border-radius: 10px;
    min-width: 20px;
    justify-content: center;
}

.innerContainer {
    align-items: center;
    padding: 0 6px;
}

.maximumNumber {
    padding: 0 8px 0 6px;
}

/* Variants - including style overrides capabilities */

.overrideStyleParams {
    background-color: color(value(primaryBgColor));
    color: color(value(primaryTextColor));
}

.priority-primary {
    background-color: color(value(primaryBgColor));
    color: color(value(primaryTextColor));
}

.priority-secondary {
    background-color: color(value(secondaryBgColor));
    color: color(value(secondaryTextColor));
}

