:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback;
}

:import {
    -st-from: "../IconButton/IconButton.st.css";
    -st-named: skin-line;
}

/*Overrides*/
:vars {
    CloseButtonColor: --overridable;
    BackgroundColor: --overridable;
}

/*Fallbacks*/
:vars {
    FixedCloseButtonColor: color(fallback(value(CloseButtonColor), black));
    FixedBackgroundColor: color(fallback(value(BackgroundColor), white));
    WiredCloseButtonColor: color(fallback(value(CloseButtonColor), color-5));
    WiredBackgroundColor: color(fallback(value(BackgroundColor), color-1));
}

.root {
    -st-states: mobile, rtl;
}

.contentWrapper {
    box-sizing: border-box;
    min-width: 280px;
    max-width: 980px;
    min-height: 240px;
    max-height: 620px;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -30%);
}

.closeButtonWrapper {
    position: absolute;
    top: 20px;
    right: 20px;
}

.dialogContent {
    padding: 80px 32px;
}

.root:mobile .contentWrapper {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: none;
}

.root:rtl .closeButtonWrapper {
    right: initial;
    left: 20px;
}

/* New style overrides capabilities */
.skin-fixed .contentWrapper {
    background-color: value(FixedBackgroundColor);
}

.skin-fixed .closeIconButton {
    -st-mixin: skin-line(
        IconColor value(FixedCloseButtonColor)
    );
}

.skin-wired .contentWrapper {
    background-color: value(WiredBackgroundColor);
}

.skin-wired .closeIconButton {
    -st-mixin: skin-line(
        IconColor value(WiredCloseButtonColor)
    );
}
