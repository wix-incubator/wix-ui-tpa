:import {
    -st-from: "../../../src/tpaStyles/styleableExt";
    -st-named: wixApply;
}

:import {
    -st-from: "wix-ui-core/dist/src/components/Autocomplete/Autocomplete.st.css";
    -st-default: CoreAutocomplete;
}

:import {
    -st-from: "../Input/Input.st.css";
    -st-default: Input;
    -st-named: inputStyling, color, colorDisabled, borderColor, borderColorHover, borderColorDisabled, font;
}

:import {
    -st-from: "../../palette.st.css";
    -st-named: errorColor, emptyErrorColor;
}


:vars {
    optionColor: value(color);
    optionColorHover: wixApply(opacity, value(optionColor), 0.6);
}

.root {
    -st-extends: CoreAutocomplete;
    -st-states: error, empty;
    -st-mixin: inputStyling;

    width: 100%;
}

.root:hover {
    border-color: value(borderColorHover);
}

.root:disabled {
    border-color: value(borderColorDisabled);
}

.root:error {
    border-color: value(errorColor);
}

.root:empty:error {
    border-color: value(emptyErrorColor);
}

.root::inputComponent {
    -st-mixin: Input;
    display: flex;
    align-items: center;
    border: 0;
}

.root::popoverContent {
    margin-left: -1px;
    width: calc(100% + 2px);
    border-color: value(borderColor);
}

.root::dropdownContent::optionsContainer {
    max-height: 284px;
}

.root::dropdownContent::dropdownOption {
    height: 39px;
    box-sizing: border-box;
    padding: 10px 14px;
    font: value(font);
    color: value(optionColor);
}

.root::dropdownContent::dropdownOption:hovered {
    background-color: unset;
    color: value(optionColorHover)
}

.root::dropdownContent::optionsContainer::-webkit-scrollbar {
    width: 24px;
    background-color: none;
}

.root::dropdownContent::optionsContainer::-webkit-scrollbar-button {
    height: 6px;
}

.root::dropdownContent::optionsContainer::-webkit-scrollbar-thumb {
    background-color: wixApply(opacity, value(color), 0.2);
    border-radius: 12px;
    background-clip: padding-box;
    border: 10px solid rgba(0, 0, 0, 0);
    height: 61px;
}

.suffix {
    padding: 0 14px;
    display: flex;
    position: absolute;
    right: 0;
}

.suffix svg path {
    fill: value(color);
}

.root:disabled .suffix svg path {
    fill: value(colorDisabled);
}

:global(.rtl) .suffix {
    left: 0;
    right: unset;
}
