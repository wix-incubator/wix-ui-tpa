:import {
    -st-from: "../../../src/tpaStyles/styleableExt";
    -st-named: wixApply;
}

:vars {
    /*Defaults*/
    /*Defaults params goes here*/
    DefaultColor: color-5;
    DisabledColor: color-3;
    DefaultFont: "{theme: 'Body-M', size: '12px', lineHeight: '16px'}";
}

:vars {
    /*Overrides*/
    /*Deceleration of overridable placeholders*/
    IconColor: --overridable;
    LabelColor: --overridable;
    LabelFont: --overridable;
}

.root {
    -st-states: mobile, checked, disabled, labelPlacement( enum(right, left) );
    /*css goes here*/
}

.root:mobile {
    /*mobile css goes here*/
}

.root {
    padding: 0;
    margin: 0;
    line-height: 0;
    display: inline-block;
}

.container {
    display: grid;
    grid-template-columns: min-content min-content;
    grid-column-gap: 6px;
    align-items: center;
}

.root:labelPlacement(right) .container {
    grid-template-areas: 'icon label';
}

.root:labelPlacement(left) .container {
    grid-template-areas: 'label icon';
}

.icon {
    grid-area: icon;
}

.icon svg {
    display: block;
}

.label {
    grid-area: label;
    color: wixApply(color, wixApply(fallback, value(LabelColor), value(DefaultColor)));
    font: wixApply(fallback, wixApply(font, value(LabelFont)), wixApply(font, value(DefaultFont)));
}

.icon path {
    stroke: wixApply(color, wixApply(fallback, value(IconColor), value(DefaultColor)));
}

.icon:hover {
    opacity: 0.6;
}

.root:checked .icon path {
    fill: wixApply(color, wixApply(fallback, value(IconColor), value(DefaultColor)));
}

.root:disabled .icon path {
    fill: wixApply(color, value(DisabledColor));
    stroke: wixApply(color, value(DisabledColor));
}

.root:disabled .label {
    color: wixApply(color, value(DisabledColor));
}

/* .root,
.icon,
.toggle,
.label {
    border: 1px solid red;
}

.toggle {
    border: 1px solid black;
} */
