:import {
  -st-from: "../../common/formatters.st";
  -st-named: color, fallback;
}

/*Defaults*/
:vars {
  defaultBorderWidth: 0px;
  defaultBorderRadius: 0px;
  defaultContainerOpacity: 100%;
  defaultImageOpacity: 100%;
}

/* Overrides */
:vars {
  /*
    A background color by a color from the palette for the container
  */
  ContainerBackgroundColor: --overridable;
  /*
    A border color by a color from the palette for the container
  */
  ContainerBorderColor: --overridable;
  /*
    A border width in pixels for the container
    @default 0px
  */
  ContainerBorderWidth: --overridable;
  /*
    A border radius in pixels for the container
    @default 0px
  */
  ContainerBorderRadius: --overridable;
  /*
    An opacity between 0 to 100 for the image
    @default 100%
  */
  ImageOpacity: --overridable;
}

:vars {
  backgroundColor: color(value(ContainerBackgroundColor));
  borderColor: color(value(ContainerBorderColor));
  borderWidth: fallback(value(ContainerBorderWidth), value(defaultBorderWidth));
  borderRadius: fallback(value(ContainerBorderRadius), value(defaultBorderRadius));
  imageOpacity: fallback(value(ImageOpacity), value(defaultImageOpacity));
  blurRadius: 3px;
}

@keyframes blurry-loading {
  0% {
    filter: blur(value(blurRadius));
  }
  100% {
    filter: none;
  }
}

.root {
  display: grid;
  min-height: 100%;
}

.root.contain .absoluteImage,
.root.contain .relativeImage {
  object-fit: contain;
}

.root.cover .absoluteImage,
.root.cover .relativeImage {
  object-fit: cover;
}

.preload {
  filter: blur(value(blurRadius));
}

.loaded {
  animation-name: blurry-loading;
  animation-duration: 0.3s;
  animation-timing-function: easeout;
}

.absoluteImage.preload {
  -st-mixin: preload;
}

.absoluteImage.loaded {
  -st-mixin: loaded;
}

.root.overrideStyleParams {
  background-color: value(backgroundColor);
  border: value(borderWidth) solid value(borderColor);
  border-radius: value(borderRadius);
}

.root.overrideStyleParams .absoluteImage, 
.root.overrideStyleParams .relativeImage {
  opacity: value(imageOpacity);
}
