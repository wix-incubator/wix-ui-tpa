:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, applyOpacity, fallback, font;
}

:import {
    -st-from: "../Text/Text.st.css";
    -st-default: TPAText;
}

/*Defaults*/
:vars {
    DefaultFontStyle: "{theme: 'Body-M', size: '14px', lineHeight: '1em'}";
    DefaultTimeColor: color-4;
    DefaultTitleColor: color-5;
    DefaultAllDayBackground: color-8;
    DefaultAllDayOpacity: 0.2; 
    DefaultTopPadding: 4px;
    DefaultRightPadding: 4px;
    DefaultBottomPadding: 4px;
    DefaultLeftPadding: 12px;
    DefaultRTLTopPadding: 4px;
    DefaultRTLRightPadding: 12px;
    DefaultRTLBottomPadding: 4px;
    DefaultRTLLeftPadding: 4px;
}

/*Overrides*/
:vars {
    FontStyle: --overridable;
    TimeColor: --overridable;
    TitleColor: --overridable;
    AllDayBackground:  --overridable;
    AllDayOpacity: --overridable;
    TopPadding: --overridable;
    RightPadding: --overridable;
    BottomPadding: --overridable;
    LeftPadding: --overridable;
    RTLTopPadding: --overridable;
    RTLRightPadding: --overridable;
    RTLBottomPadding: --overridable;
    RTLLeftPadding: --overridable;
}

/* Fallbacks */
:vars {
    CurrentFontStyle: fallback(value(FontStyle), font(value(DefaultFontStyle)));
    CurrentTimeColor: color(fallback(value(TimeColor), value(DefaultTimeColor)));
    CurrentTitleColor: color(fallback(value(TitleColor), value(DefaultTitleColor)));
    CurrentAllDayBackground: color(fallback(value(AllDayBackground), value(DefaultAllDayBackground)));
    CurrentAllDayOpacity: fallback(value(AllDayOpacity), value(DefaultAllDayOpacity));
    CurrentTopPadding: fallback(value(TopPadding),value(DefaultTopPadding));
    CurrentRightPadding: fallback(value(RightPadding),value(DefaultRightPadding));
    CurrentLeftPadding: fallback(value(LeftPadding),value(DefaultLeftPadding));
    CurrentBottomPadding: fallback(value(BottomPadding),value(DefaultBottomPadding));
    CurrentRTLTopPadding: fallback(value(RTLTopPadding),value(DefaultRTLTopPadding));
    CurrentRTLRightPadding: fallback(value(RTLRightPadding),value(DefaultRTLRightPadding));
    CurrentRTLLeftPadding: fallback(value(RTLLeftPadding),value(DefaultRTLLeftPadding));
    CurrentRTLBottomPadding: fallback(value(RTLBottomPadding),value(DefaultRTLBottomPadding));
}

.root {
    -st-states: isMultiday, isSelected, isRightToLeft;
    position: relative;
    padding: value(CurrentTopPadding) value(CurrentRightPadding) value(CurrentBottomPadding) value(CurrentLeftPadding);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.time {
    padding-right: 2px;
    -st-mixin: TPAText(
        MainTextFont value(CurrentFontStyle),
        MainTextColor value(CurrentTimeColor)
    );
}

.title {
  -st-mixin: TPAText(
        MainTextFont value(CurrentFontStyle),
        MainTextColor value(CurrentTitleColor)
    );
}

.root:hover::before {
    content: '';
    background-color: applyOpacity(color(color-5), 0.06);
    position: absolute;
    left: 0px;
    right: 0px;
    height: 100%;
    margin-top: -4px;
}

.root:isSelected::before {
    content: '';
    background-color: applyOpacity(color(color-5), 0.1);
    position: absolute;
    left: 0px;
    right: 0px;
    height: 100%;
    margin-top: -4px;
}

.root:isRightToLeft {
    direction: rtl;
    display: table;
    float: right;
    padding: value(CurrentRTLTopPadding) value(CurrentRTLRightPadding) value(CurrentRTLBottomPadding) value(CurrentRTLLeftPadding);
}

.root:isRightToLeft .time{
    padding-right: 0;
    padding-left: 2px;
    display: table-cell;
}

.root:isMultiday {
    background: applyOpacity(value(CurrentAllDayBackground), value(CurrentAllDayOpacity));
}
