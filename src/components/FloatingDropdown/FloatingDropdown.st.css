:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, font, fallback, applyOpacity;
}

:import {
    -st-from: "./FloatingDropdownBase.st.css";
    -st-default: FloatingDropdownBase;
    -st-named: minWidth, maxWidth, arrowIcon, label, content, selectedValue;
}

:import {
    -st-from: "../Dropdown/DropdownOption.st.css";
    -st-default: DropdownOption;
    -st-named: hover, selected;
}

:import {
    -st-from: "../Dropdown/Dropdown.st.css";
    -st-named: dropdown, divider;
}

:import {
    -st-from: "../Text/Text.st.css";
    -st-default: Text;
}

/*Constance*/
:vars {
    DefaultTextColor: color-5;
    DefaultDisabledTextColor: color-3;
    DefaultDropdownBackgroundColor: color-1;
    DefaultTextFont: "{theme: 'Body-M', size: '16px', lineHeight: '1.5em'}";
}

/*Overrides*/
:vars {
    /*
        The Dropdown Background color
        @default color-1
    */
    DropdownBackgroundColor: --overridable;
    /*
        The Button Text color for Disable state
        @default color-3
    */
    DisabledTextColor: --overridable;
    /*
        The Button Text color
        @default color-5
    */
    ButtonTextColor: --overridable;
    /*
        The Items Text color
        @default color-5
    */
    ItemTextColor: --overridable;
    /*
        The Texts font
        @default {theme: 'Body-M', size: '16px', lineHeight: '1.5em'}
    */
    TextFont: --overridable;
}

.root {}

.root .dropdown {
    min-width: value(minWidth);
    max-width: value(maxWidth);
}

.root .dropdown:content-visible FloatingDropdownBase::arrowIcon {
    transform: translateX(-0.25em) rotate(180deg) scale(1.5);
}

.root .dropdown::dropdownContent Text {
    color: color(fallback(value(ItemTextColor), value(ButtonTextColor), value(DefaultTextColor)));
}

.root FloatingDropdownBase::content,
.root FloatingDropdownBase::content .label,
.root FloatingDropdownBase:mobile .selectedValue {
    color: color(fallback(value(ButtonTextColor), value(DefaultTextColor)));
}

.root FloatingDropdownBase:disabled .label,
.root FloatingDropdownBase:disabled .content,
.root FloatingDropdownBase:disabled .selectedValue {
    color: color(fallback(value(DisabledTextColor), value(DefaultDisabledTextColor)));
}

.root FloatingDropdownBase::arrowIcon path {
    fill: color(fallback(value(ButtonTextColor), value(DefaultTextColor)));
}

.root FloatingDropdownBase:disabled .arrowIcon path {
    fill: color(fallback(value(DisabledTextColor), value(DefaultDisabledTextColor)));
}

.root FloatingDropdownBase::content,
.root .dropdown::dropdownContent Text {
    font: fallback(font(value(TextFont)), font(value(DefaultTextFont)));
}

.root .dropdown:content-visible FloatingDropdownBase {
    background: transparent;
}

.root .dropdown DropdownOption::title {
    white-space: initial;
}

.optionDivider {
    -st-mixin: divider;
}

.root .dropdown::dropdownContent .optionDivider {
    background-color: color(fallback(value(ItemTextColor), value(ButtonTextColor), value(DefaultTextColor)));
}

.root .dropdown::dropdownContent {
    background-color: color(fallback(value(DropdownBackgroundColor), value(DefaultDropdownBackgroundColor)));
}

.root .dropdown::dropdownContent::dropdownOption:hovered,
.root .dropdown::dropdownContent::dropdownOption:selected {
    background-color: applyOpacity(color(fallback(value(ItemTextColor), value(ButtonTextColor), value(DefaultTextColor))), 0.06);
}
